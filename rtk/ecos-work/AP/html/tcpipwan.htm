<html>
<!-- Copyright (c) Realtek Semiconductor Corp., 2003. All Rights Reserved. -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=<% getLangInfo("charset");%>">
<SCRIPT language=Javascript src="<% getLangInfo("lang");%>"></SCRIPT>
<% getIndex("no-cache"); %>
<title>WAN Interface Setup </title>
<style>
.on {display:on}
.off {display:none}
</style>
<% language=javascript %>
<script type="text/javascript" src="util_gw.js"> </script>
<SCRIPT>
var initialDnsMode, pppConnectStatus=0;
var wan_connection_type=0;
var dynamicWanIP=1;

function setPPPConnected()
{
   pppConnectStatus = 1;
}

function pptpConnectClick(connect)
{
  if (document.tcpip.pptpConnectType.selectedIndex == 2 && pppConnectStatus==connect) {
      if (document.tcpip.pptpUserName.value=="") {
          alert('PPTP user name cannot be empty!');
	  document.tcpip.pptpUserName.value = document.tcpip.pptpUserName.defaultValue;
	  document.tcpip.pptpUserName.focus();
	  return false;
      }
      if (document.tcpip.pptpPassword.value=="") {
          alert('PPTP password cannot be empty!');
	  document.tcpip.pptpPassword.value = document.tcpip.pptpPassword.defaultValue;
	  document.tcpip.pptpPassword.focus();
	  return false;
      }
      return true;
  }
  return false;
}
function l2tpConnectClick(connect)
{
  if (document.tcpip.l2tpConnectType.selectedIndex == 2 && pppConnectStatus==connect) {
      if (document.tcpip.l2tpUserName.value=="") {
          alert('L2TP user name cannot be empty!');
	  document.tcpip.l2tpUserName.value = document.tcpip.l2tpUserName.defaultValue;
	  document.tcpip.l2tpUserName.focus();
	  return false;
      }
      if (document.tcpip.l2tpPassword.value=="") {
          alert('L2TP password cannot be empty!');
	  document.tcpip.l2tpPassword.value = document.tcpip.l2tpPassword.defaultValue;
	  document.tcpip.l2tpPassword.focus();
	  return false;
      }
      return true;
  }
  return false;
}
function pppConnectClick(connect)
{
  if (document.tcpip.pppConnectType.selectedIndex == 2 && pppConnectStatus==connect) {
      if (document.tcpip.pppUserName.value=="") {
          alert('PPP user name cannot be empty!');
          document.tcpip.pppUserName.value = document.tcpip.pppUserName.defaultValue;
          document.tcpip.pppUserName.focus();
          return false;
      }
      if (document.tcpip.pppPassword.value=="") {
          alert('PPP password cannot be empty!');
          document.tcpip.pppPassword.value = document.tcpip.pppPassword.defaultValue;
          document.tcpip.pppPassword.focus();
          return false;
      }
      if(!checkChanges_tcpipwan())
      {
      	return false;
      }
      return true;
  }
  return false;
}

function resetClicked()
{
   if(document.tcpip.wanType.selectedIndex != 0){
	   if(document.tcpip.dnsMode[0].checked)
	      disableDNSinput();
	   else
	      enableDNSinput();
   }

   document.tcpip.reset;

	location=location;
}
function checkChange_staticIp()
{
	var form=document.tcpip;
	var tarIp = ipv4_to_unsigned_integer(form.wan_ip.value);
	if (((tarIp & 0xFF000000) == 0x00000000))
	{
		alert(tcpip_check_ip_msg);
		form.wan_ip.focus();
		return false;
	}
	if(!checkIpAddr(form.wan_ip, tcpip_check_ip_msg))    return false;
	if(!checkIPMask(form.wan_mask))	return false ;
	if(!checkGateway(form.wan_gateway,form.wan_ip,form.wan_mask)) return false;
	  
	if(!checkIntSize(form.fixedIpMtuSize,1400,1500,tcpip_check_size_msg+"1400-1500.")) return false;

	return true;
}
function checkChange_dhcpc()
{
	if(!checkIntSize(document.tcpip.dhcpMtuSize,1400,1500,tcpip_check_size_msg+"1400-1500.")) return false;
	
	return true;
}
function checkChange_pppoe()
{	
	var form=document.tcpip;
	if(!checkStrNoNULL(form.pppUserName,"PPP" + tcpip_check_user_name_msg)) return false;
	if(!checkStrNoNULL(form.pppPassword,"PPP" + tcpip_check_password_msg)) return false;
	
	if ( form.pppConnectType != null)
	{
		if ( form.pppConnectType.value == "on_demand" ) 
		{
			if(!checkIntSize(form.pppIdleTime,1,1000,tcpip_check_invalid_time_msg + "1-1000.")) return false;
		}
	} 
	if(!checkIntSize(form.pppMtuSize,1360,1492,tcpip_check_size_msg+"1360-1492.")) return false;
	
	return true;	
}
function checkChange_pptp()
{	
	var form=document.tcpip;
	var tarIp;
	
	if(document.tcpip.wan_pptp_use_dynamic_carrier_radio[1].checked)
	{
		tarIp= ipv4_to_unsigned_integer(form.pptpIpAddr.value);
		if(((tarIp & 0xFF000000) == 0x00000000))
		{
			alert(tcpip_check_ip_msg);
			form.pptpIpAddr.focus();
			return false;
		}
		if(!checkIpAddr(form.pptpIpAddr, tcpip_check_ip_msg))
		{
			return false;
		}
		if(!checkIPMask(form.pptpSubnetMask))
		{
			return false;
		}
		if(!checkGateway(form.pptpDefGw,form.pptpIpAddr,form.pptpSubnetMask))
		{
			return false;
		}
	}
	
	if (!checkIpAddr(form.pptpServerIpAddr, tcpip_check_server_ip_msg))	return false;
	tarIp = ipv4_to_unsigned_integer(form.pptpServerIpAddr.value);
	if (((tarIp & 0xFF000000) == 0x00000000))
	{
		alert(tcpip_check_ip_msg);
		form.pptpServerIpAddr.focus();
		return false;
	}
	
	if(!checkStrNoNULL(form.pptpUserName,"PPTP" + tcpip_check_user_name_msg)) return false;
	if(!checkStrNoNULL(form.pptpPassword,"PPTP" + tcpip_check_password_msg)) return false;
	
	if ( form.pptpConnectType != null)
	{
		if ( form.pptpConnectType.value == "on_demand" ) 
		{
			if(!checkIntSize(form.pptpIdleTime,1,1000,tcpip_check_invalid_time_msg + "1-1000.")) return false;
		}
	}
	if(!checkIntSize(form.pptpMtuSize,1400,1460,tcpip_check_size_msg + "1400-1460.")) return false;

	if(form.pptpGetServMode[0].checked == true)
	{
		if(form.pptpServerDomainName.value=="")
		{
			alert(tcpip_pptp_server_domain_name);	
			form.pptpServerDomainName.focus();
			return false;
		}
		var str = form.pptpServerDomainName.value;
		for(var i=0; i<str.length; i++)
		{
/*
		  	if( (str.charAt(i) >= '0' && str.charAt(i) <= '9') ||
					(str.charAt(i) >= 'a' && str.charAt(i) <= 'z') ||
					(str.charAt(i) >= 'A' && str.charAt(i) <= 'Z') )
					continue;
*/
			if(str.charAt(i)==' ')
			{
				alert(tcpip_pptp_server_domain_name);	
				form.pptpServerDomainName.focus();
				return false;
			}
	  	}
	}
	return true;	
}
function checkChange_l2tp()
{
	var form=document.tcpip;
	var tarIp;
	if(document.tcpip.wan_l2tp_use_dynamic_carrier_radio[1].checked)
	{
		tarIp= ipv4_to_unsigned_integer(form.l2tpIpAddr.value);
		if(((tarIp & 0xFF000000) == 0x00000000))
		{
			alert(tcpip_check_ip_msg);
			form.l2tpIpAddr.focus();
			return false;
		}
		if(!checkIpAddr(form.l2tpIpAddr, tcpip_check_ip_msg))
		{
			return false;
		}
		if(!checkIPMask(form.l2tpSubnetMask))
		{
			return false ;
		}
		if(!checkGateway(form.l2tpDefGw,form.l2tpIpAddr,form.l2tpSubnetMask))
		{
			return false;
		}
	}
	
	if (!checkIpAddr(form.l2tpServerIpAddr, tcpip_check_server_ip_msg))	return false;
	tarIp = ipv4_to_unsigned_integer(form.l2tpServerIpAddr.value);
	if (((tarIp & 0xFF000000) == 0x00000000))
	{
		alert(tcpip_check_ip_msg);
		form.l2tpServerIpAddr.focus();
		return false;
	}

	if(!checkStrNoNULL(form.l2tpUserName,"L2TP" + tcpip_check_user_name_msg)) return false;
	if(!checkStrNoNULL(form.l2tpPassword,"L2TP" + tcpip_check_password_msg)) return false;
	
	if ( form.l2tpConnectType != null)
	{
		if ( form.l2tpConnectType.value == "on_demand" ) 
		{
			if(!checkIntSize(form.l2tpIdleTime,1,1000,tcpip_check_invalid_time_msg + " 1-1000.")) return false;
		}
	}
	if(!checkIntSize(form.l2tpMtuSize,1400,1460,tcpip_check_size_msg + "1400-1460.")) return false;

	if(form.l2tpGetServMode[0].checked == true)
	{
		if(form.l2tpServerDomainName.value=="")
		{
			alert(tcpip_l2tp_server_domain_name);	
			form.l2tpServerDomainName.focus();
			return false;
		}
		var str = form.l2tpServerDomainName.value;
		for(var i=0; i<str.length; i++)
		{
/*
		  	if( (str.charAt(i) >= '0' && str.charAt(i) <= '9') ||
					(str.charAt(i) >= 'a' && str.charAt(i) <= 'z') ||
					(str.charAt(i) >= 'A' && str.charAt(i) <= 'Z') )
					continue;
*/
			if(str.charAt(i)==' ')
			{
				alert(tcpip_l2tp_server_domain_name);	
				form.l2tpServerDomainName.focus();
				return false;
			}
	  	}
	}
	
	return true;	
}
function checkChange_dns()
{
	var form=document.tcpip;
	if(form.dnsMode[1].checked)
	{
		if(form.dns1.value==""||form.dns1.value=="0.0.0.0")
		{
			alert("dns1 can't be empty or 0.0.0.0!!");
			return false;
		}
		if (!checkIpAddr(form.dns1, tcpip_check_dns_ip_msg1))	return false;
		if(form.dns2.value=="")
			form.dns2.value="0.0.0.0";
		else if(form.dns2.value!="0.0.0.0"&&!checkIpAddr(form.dns2, tcpip_check_dns_ip_msg2))	return false;

		var tarIp = ipv4_to_unsigned_integer(form.dns1.value);
		if (((tarIp & 0xFF000000) == 0x00000000))
		{
			alert(tcpip_check_dns_ip_msg1);
			form.dns1.focus();
			return false;
		}
		tarIp = ipv4_to_unsigned_integer(form.dns2.value);
		if ((form.dns2.value!="0.0.0.0") && ((tarIp & 0xFF000000) == 0x00000000))
		{
			alert(tcpip_check_dns_ip_msg2);
			form.dns2.focus();
			return false;
		}
		
	}
	return true;
}
function checkChanges_tcpipwan()
{
	with(document.tcpip)
	{
		if(wanType.value=="fixedIp" && !checkChange_staticIp())
			return false;
		else if(wanType.value=="autoIp" && !checkChange_dhcpc())
			return false;
		else if(wanType.value=="ppp" && !checkChange_pppoe())
			return false;
		else if(wanType.value=="pptp" && !checkChange_pptp())
			return false;
		else if(wanType.value=="l2tp" && !checkChange_l2tp())
			return false;

		if(!checkChange_dns())	return false;
		if(!check_macAddr(wan_macAddr)) return false;		
	}
	return true;
}

function disableDNSinput()
{
   disableTextField(document.tcpip.dns1);
   disableTextField(document.tcpip.dns2);
}

function enableDNSinput()
{
   enableTextField(document.tcpip.dns1);
   enableTextField(document.tcpip.dns2);
}

function autoDNSclicked()
{
  disableDNSinput();
}

function manualDNSclicked()
{
  enableDNSinput();
}

function pppoeTypeSelect(field)
{
	with(document.tcpip)
	{
		if(field.value=="continuous")
		{
			pppConnect.disabled=true;
			pppDisconnect.disabled=true;
		}
		else if(field.value=="on_demand")
		{
			pppConnect.disabled=true;
			pppDisconnect.disabled=true;
		}
		else if(field.value=="manual")
		{
			pppConnect.disabled=false;
			pppDisconnect.disabled=true;
		}
		else
		{
			alert(tcpip_pppoecontype_alert);
		}
	}
	pppTypeSelection(0);
}
function pptpTypeSelect(field)
{
	with(document.tcpip)
	{
		if(field.value=="continuous")
		{
			pptpConnect.disabled=true;
			pptpDisconnect.disabled=true;
		}
		else if(field.value=="on_demand")
		{
			pptpConnect.disabled=true;
			pptpDisconnect.disabled=true;
		}
		else if(field.value=="manual")
		{
			pptpConnect.disabled=false;
			pptpDisconnect.disabled=true;
		}
		else
		{
			alert(tcpip_pptpontype_alert);
		}
	}
	pppTypeSelection(1);
}
function l2tpTypeSelect(field)
{
	with(document.tcpip)
	{
		if(field.value=="continuous")
		{
			l2tpConnect.disabled=true;
			l2tpDisconnect.disabled=true;
		}
		else if(field.value=="on_demand")
		{
			l2tpConnect.disabled=true;
			l2tpDisconnect.disabled=true;
		}
		else if(field.value=="manual")
		{
			l2tpConnect.disabled=false;
			l2tpDisconnect.disabled=true;
		}
		else
		{
			alert(tcpip_l2tpcontype_alert);
		}
	}
	pppTypeSelection(2);
}
function getPppConnTypeName(pppConnType)
{
	if(pppConnType==0)
	{
		return "continuous";
	}
	else if(pppConnType==1)
	{
		return "on_demand";
	}
	else if(pppConnType==2)
	{
		return "manual";
	}
	else
	{
		alert(tcpip_pppcontype_alert+pppConnType);
		return "continuous";
	}
}
function wanTypeSelection(field)
{
 
  if(!document.getElementById){
  	alert(tcpip_browser_alert);
  	return;
  }
  
  if(field.value == "fixedIp"){	//static ip
  	wanShowDiv(0 ,1, 0, 0, 1, 0); //pptp, dns, dnsMode, pppoe, static (div), l2tp, USB3G
    show_div(0,"dhcpplus_div");
	enableDNSinput();	
	document.tcpip.dnsMode[1].checked = true ; // dns change to manual mode
  }
  else if(field.value == "autoIp" || field.value == "dhcpplus"){ //Dhcp
  	if (field.value == "dhcpplus")
  	{
  		show_div(1,"dhcpplus_div");
  	}
  	else if (field.value == "autoIp")
  	{
  		show_div(0,"dhcpplus_div");
  	} 	
  	wanShowDiv(0 ,1, 1, 0, 0, 0);   
	if(document.tcpip.dnsMode[0].checked)
		disableDNSinput();	

	document.tcpip.dnsMode[0].disabled=false;
	document.tcpip.dnsMode[1].disabled=false;

  }else if(field.value == "ppp" || field.value == "pppoehenan" || field.value == "pppoenanchang" || field.value == "pppoeother1" || field.value == "pppoeother2"){ //pppoe

  	wanShowDiv(0 ,1, 1, 1, 0, 0); 
  	show_div(0,"dhcpplus_div");
	document.tcpip.pppConnectType.value=getPppConnTypeName(<%getIndex("pppConnectType")%>);
	pppoeTypeSelect(document.tcpip.pppConnectType);
	
	if(document.tcpip.dnsMode[0].checked)
		disableDNSinput();

	document.tcpip.dnsMode[0].disabled=false;
	document.tcpip.dnsMode[1].disabled=false;
	
  }else if(field.value == "pptp"){ //pptp
  	wanShowDiv(1, 1, 1, 0, 0, 0);
  	show_div(0,"dhcpplus_div");
	document.tcpip.pptpConnectType.value=getPppConnTypeName(<%getIndex("pptpConnectType")%>);
	pptpTypeSelect(document.tcpip.pptpConnectType);
	if(document.tcpip.dnsMode[0].checked)
		disableDNSinput();

	if(<%getIndex("enableGetServIpByDomainName")%>)
	{
		if(<%getIndex("pptpGetServIpByDomainName")%>)
		{
			document.tcpip.pptpGetServMode[0].checked = true;
			pptpGetServByDomainNameClicked();
			
			if(document.tcpip.wan_pptp_use_dynamic_carrier_radio[1].checked)
			{
				document.tcpip.elements["dnsMode"][0].disabled = true;	
				document.tcpip.elements["dnsMode"][1].checked = true;	
				manualDNSclicked();
			}
			else
			{
				document.tcpip.elements["dnsMode"][0].disabled = false;	
				document.tcpip.elements["dnsMode"][1].disabled = false;
			}
		}
		else
		{
			document.tcpip.pptpGetServMode[1].checked = true;
			pptpGetServByIpClicked();			
			
			document.tcpip.elements["dnsMode"][0].disabled = false;	
			document.tcpip.elements["dnsMode"][1].disabled = false;
		}
	}	

/*
	if(document.tcpip.wan_pptp_use_dynamic_carrier_radio[1].checked)
	{
		document.tcpip.elements["dnsMode"][0].disabled = true;
		document.tcpip.elements["dnsMode"][1].checked = true;
		manualDNSclicked();
	}
	else
		document.tcpip.elements["dnsMode"][0].disabled = false;
*/
		
	if (<% getIndex("pptpSecurity"); %>)
		document.tcpip.pptpSecurity.checked = true;

	if (<% getIndex("pptpCompress"); %>)
		document.tcpip.pptpCompress.checked = true;
  }else if(field.value == "l2tp"){ //l2tp
  	wanShowDiv(0, 1, 1, 0, 0, 1);
  	show_div(0,"dhcpplus_div");
	document.tcpip.l2tpConnectType.value=getPppConnTypeName(<%getIndex("l2tpConnectType")%>);
	l2tpTypeSelect(document.tcpip.l2tpConnectType);
	if(document.tcpip.dnsMode[0].checked)
		disableDNSinput();	

	if(<%getIndex("enableGetServIpByDomainName")%>)
	{
		if(<%getIndex("l2tpGetServIpByDomainName")%>)
		{
			document.tcpip.l2tpGetServMode[0].checked = true;
			l2tpGetServByDomainNameClicked();

			if(document.tcpip.wan_l2tp_use_dynamic_carrier_radio[1].checked)
			{
				document.tcpip.elements["dnsMode"][0].disabled = true;	
				document.tcpip.elements["dnsMode"][1].checked = true;	
				manualDNSclicked();
			}
			else
			{
				document.tcpip.elements["dnsMode"][0].disabled = false;	
				document.tcpip.elements["dnsMode"][1].disabled = false;
			}
		}
		else
		{
			document.tcpip.l2tpGetServMode[1].checked = true;
			l2tpGetServByIpClicked();			
			
			document.tcpip.elements["dnsMode"][0].disabled = false;	
			document.tcpip.elements["dnsMode"][1].disabled = false;
		}
	}

/*
	if(document.tcpip.wan_l2tp_use_dynamic_carrier_radio[1].checked)
	{
		document.tcpip.elements["dnsMode"][0].disabled = true;
		document.tcpip.elements["dnsMode"][1].checked = true;
		manualDNSclicked();
	}
	else
		document.tcpip.elements["dnsMode"][0].disabled = false;
*/

  }
  wan_connection_type=document.tcpip.wanType.selectedIndex;
   if(wan_connection_type == 2)
   		pppTypeSelection(0);
   	else if(wan_connection_type == 3)
   		pppTypeSelection(1);
   	else if(wan_connection_type == 4)
   		pppTypeSelection(2);
}

function pppTypeSelection(wan_type)
{
        if(wan_type == 0){
                  if ( document.tcpip.pppConnectType.selectedIndex == 2) {
                        if (pppConnectStatus==0) {
                                enableButton(document.tcpip.pppConnect);
                                disableButton(document.tcpip.pppDisconnect);
                        }
                        else {
                                disableButton(document.tcpip.pppConnect);
                                enableButton(document.tcpip.pppDisconnect);
                        }
                        disableTextField(document.tcpip.pppIdleTime);
                  }
                  else {
                        disableButton(document.tcpip.pppConnect);
                        disableButton(document.tcpip.pppDisconnect);
                        if (document.tcpip.pppConnectType.selectedIndex == 1)
                                enableTextField(document.tcpip.pppIdleTime);
                        else
                                disableTextField(document.tcpip.pppIdleTime);
                  }
    	}


        if(wan_type == 1){
				//{   //Use static wan ip
                 ///       enableTextField(document.tcpip.pptpIpAddr);
                 //       enableTextField(document.tcpip.pptpSubnetMask);
                //}
				//for dynamic wan IP
					if(document.tcpip.wan_pptp_use_dynamic_carrier_radio[0].checked == true){	//Use dynamic wan ip
						disableTextField(document.tcpip.pptpIpAddr);
						disableTextField(document.tcpip.pptpSubnetMask);
						disableTextField(document.tcpip.pptpDefGw);
					}
					else{	//Use static wan ip
						enableTextField(document.tcpip.pptpIpAddr);
						enableTextField(document.tcpip.pptpSubnetMask);
						enableTextField(document.tcpip.pptpDefGw);
					}

        //end
                  if ( document.tcpip.pptpConnectType.selectedIndex == 2) {
                        if (pppConnectStatus==0) {
                                enableButton(document.tcpip.pptpConnect);
                                disableButton(document.tcpip.pptpDisconnect);
                        }
                        else {
                                disableButton(document.tcpip.pptpConnect);
                                enableButton(document.tcpip.pptpDisconnect);
                        }
                        disableTextField(document.tcpip.pptpIdleTime);
                  }
                  else {
                        disableButton(document.tcpip.pptpConnect);
                        disableButton(document.tcpip.pptpDisconnect);
                        if (document.tcpip.pptpConnectType.selectedIndex == 1)
                                enableTextField(document.tcpip.pptpIdleTime);
                        else
                                disableTextField(document.tcpip.pptpIdleTime);
                  }
        }
	if(wan_type == 2){
	//for dynamic wan IP
		if(document.tcpip.wan_l2tp_use_dynamic_carrier_radio[0].checked == true){	//Use dynamic wan ip
			disableTextField(document.tcpip.l2tpIpAddr);
			disableTextField(document.tcpip.l2tpSubnetMask);
			disableTextField(document.tcpip.l2tpDefGw);
		}
		else{	//Use static wan ip
			enableTextField(document.tcpip.l2tpIpAddr);
			enableTextField(document.tcpip.l2tpSubnetMask);
			enableTextField(document.tcpip.l2tpDefGw);
		}

        //end
                  if ( document.tcpip.l2tpConnectType.selectedIndex == 2) {
                        if (pppConnectStatus==0) {
                                enableButton(document.tcpip.l2tpConnect);
                                disableButton(document.tcpip.l2tpDisconnect);
                        }
                        else {
                                disableButton(document.tcpip.l2tpConnect);
                                enableButton(document.tcpip.l2tpDisconnect);
                        }
                        disableTextField(document.tcpip.l2tpIdleTime);
                  }
                  else {
                        disableButton(document.tcpip.l2tpConnect);
                        disableButton(document.tcpip.l2tpDisconnect);
                        if (document.tcpip.l2tpConnectType.selectedIndex == 1)
                                enableTextField(document.tcpip.l2tpIdleTime);
                        else
                                disableTextField(document.tcpip.l2tpIdleTime);
                  }
        }
}

function showNetSniperInfo()
{
	var netSniperEnable=<% getIndex("net_sniper_enable"); %>;
	if (netSniperEnable)
	{
		document.write('<tr>\
		  <td width="100%" colspan="2"><font size=2>\
		  <b><input type="checkbox" name="netsniper" value="ON"><script>dw(tcpip_wan_enable_netsniper)<\/script></b></td>\
		 </tr>');
	}
}

function showNetSniperWanTypeInfo()
{
	var nsWantypeEnable=<% getIndex("net_sniper_wantype_enable"); %>;
	if (nsWantypeEnable)
	{		  
		<!--<option value="pppoenanchang"><script>dw(tcpip_wan_type_pppoe_nanchang)<\/script></option>\-->
		document.write('<option value="pppoehenan"><script>dw(tcpip_wan_type_pppoe_henan)<\/script></option>\
		  <option value="pppoeother1"><script>dw(tcpip_wan_type_pppoe_other1)<\/script></option>\
		  <option value="pppoeother2"><script>dw(tcpip_wan_type_pppoe_other2)<\/script></option>\
		  <option value="dhcpplus"><script>dw(tcpip_wan_type_dhcp_plus)<\/script></option>');
	}
}

function Load_wanSetting()
{
	var wanDhcp_ = <% getIndex("wanDhcp"); %>;
	var wanDhcp_selValue = 0;
	var dF=document.tcpip;
	
	if ( wanDhcp_ == 0 )//DHCP_DISABLED
		wanDhcp_selValue = "fixedIp";
	else if ( wanDhcp_ == 1 )//DHCP_CLIENT
		wanDhcp_selValue = "autoIp";
	else if ( wanDhcp_ == 3 )//PPPOE
		wanDhcp_selValue = "ppp";
	else if ( wanDhcp_ == 4 )//PPTP
		wanDhcp_selValue = "pptp";
	else if ( wanDhcp_ == 6 )//L2TP
		wanDhcp_selValue = "l2tp";
	else if ( wanDhcp_ == 20 )//pppoehenan
		wanDhcp_selValue = "pppoehenan";
	else if ( wanDhcp_ == 21 )//pppoenanchang
		wanDhcp_selValue = "pppoenanchang";		
	else if ( wanDhcp_ == 22 )//pppoeother1
		wanDhcp_selValue = "pppoeother1";
	else if ( wanDhcp_ == 23 )//pppoeother2
		wanDhcp_selValue = "pppoeother2";
	else if ( wanDhcp_ == 24 )//dhcpplus
		wanDhcp_selValue = "dhcpplus";		
	else
		wanDhcp_selValue = "autoIp";
	document.tcpip.wanType.value= wanDhcp_selValue;
	
	if ( <% getIndex("wanDNS"); %> == 0) {
		document.tcpip.elements["dnsMode"][0].checked = true;
		autoDNSclicked();
	}
	
	if ( <% getIndex("wanDNS"); %> == 1) {
		document.tcpip.elements["dnsMode"][1].checked = true;
		manualDNSclicked();
	}
	
	//wanTypeSelection(document.tcpip.wanType);

	if ( <% getIndex("tr069DhcpEnabled"); %> )
		document.tcpip.tr069DhcpEnabled.checked = true;		

	if ( <% getIndex("upnpEnabled"); %> )
		document.tcpip.upnpEnabled.checked = true;

	if ( <% getIndex("igmpproxyDisabled"); %> == 0 )
		document.tcpip.igmpproxyEnabled.checked = true;

	if ( <% getIndex("pingWanAccess"); %> )
		document.tcpip.pingWanAccess.checked = true;

	if ( <% getIndex("webWanAccess"); %> )
		document.tcpip.webWanAccess.checked = true;

	if ( <% getIndex("VPNPassThruIPsec"); %> )
		document.tcpip.WANPassThru1.checked = true;

	if ( <% getIndex("VPNPassThruPPTP"); %> )
		document.tcpip.WANPassThru2.checked = true;

	if ( <% getIndex("VPNPassThruL2TP"); %> )
		document.tcpip.WANPassThru3.checked = true;

	if ( <% getIndex("ipv6passthrouh"); %> )
		document.tcpip.ipv6_passthru_enabled.checked = true;
		
	if ( <% getIndex("netsniper"); %> )
		document.tcpip.netsniper.checked = true;
	if(<% getIndex("l2tp_wan_ip_mode"); %>)
	{//static ip
		dF.wan_l2tp_use_dynamic_carrier_radio[1].checked = true;
		dF.l2tpIpAddr.disabled = false;
		dF.l2tpSubnetMask.disabled = false;
		dF.l2tpDefGw.disabled = false;
		//dF.elements["dnsMode"][0].disabled = true;
		//dF.elements["dnsMode"][1].checked = true;
		//manualDNSclicked();
	}
	else
	{
		dF.wan_l2tp_use_dynamic_carrier_radio[0].checked = true;
		dF.l2tpIpAddr.disabled = true;
		dF.l2tpSubnetMask.disabled = true;
		dF.l2tpDefGw.disabled = true;
		//dF.elements["dnsMode"][0].disabled = false;
	}

	if(<% getIndex("pptp_wan_ip_mode"); %>)
	{//static ip
		dF.wan_pptp_use_dynamic_carrier_radio[1].checked = true;
		dF.pptpIpAddr.disabled = false;
		dF.pptpSubnetMask.disabled = false;
		dF.pptpDefGw.disabled = false;
		//dF.elements["dnsMode"][0].disabled = true;
		//dF.elements["dnsMode"][1].checked = true;
		//manualDNSclicked();
	}
	else
	{
		dF.wan_pptp_use_dynamic_carrier_radio[0].checked = true;
		dF.pptpIpAddr.disabled = true;
		dF.pptpSubnetMask.disabled = true;
		dF.pptpDefGw.disabled = true;
		//dF.elements["dnsMode"][0].disabled = false;
	}
	
	if ( <% getIndex("wanDNS"); %> == 0) {		
		document.tcpip.elements["dnsMode"][0].checked = true;
		autoDNSclicked();
	}
	
	if ( <% getIndex("wanDNS"); %> == 1) {
		document.tcpip.elements["dnsMode"][1].checked = true;
		manualDNSclicked();
	}
	//end

	wanTypeSelection(document.tcpip.wanType);
	
//move the follow to wanTypeSelection()
/*
	if(<%getIndex("enableGetServIpByDomainName")%>)
	{
		if(<%getIndex("l2tpGetServIpByDomainName")%>)
		{
			dF.l2tpGetServMode[0].checked = true;
			l2tpGetServByDomainNameClicked();

			if(wanDhcp_==6)
			{
				dF.elements["dnsMode"][0].disabled = true;	
				dF.elements["dnsMode"][1].checked = true;	
				manualDNSclicked();
			}
		}else
		{
			dF.l2tpGetServMode[1].checked = true;
			l2tpGetServByIpClicked();
			
			if(wanDhcp_==6)
			{
				dF.elements["dnsMode"][0].disabled = false;	
				dF.elements["dnsMode"][1].disabled = false;
			}
		}
	}
	
	if(<%getIndex("enableGetServIpByDomainName")%>)
	{
		if(<%getIndex("pptpGetServIpByDomainName")%>)
		{
			dF.pptpGetServMode[0].checked = true;
			pptpGetServByDomainNameClicked();
			
			if(wanDhcp_==4)
			{
				dF.elements["dnsMode"][0].disabled = true;	
				dF.elements["dnsMode"][1].checked = true;	
				manualDNSclicked();
			}
		}else
		{
			dF.pptpGetServMode[1].checked = true;
			pptpGetServByIpClicked();
			
			if(wanDhcp_==4)
			{
				dF.elements["dnsMode"][0].disabled = false;	
				dF.elements["dnsMode"][1].disabled = false;
			}
		}
	}
*/
}

function wan_pptp_use_dynamic_carrier_selector(index, mode){
	var dF=document.tcpip;

	if(mode == "dynamicIP") {
		dF.wan_pptp_use_dynamic_carrier_radio[index].checked = true;
		dF.pptpIpAddr.disabled = true;
		dF.pptpSubnetMask.disabled = true;
		dF.pptpDefGw.disabled = true;
		dynamicWanIP = 1;
		
		dF.elements["dnsMode"][0].disabled = false;
		dF.elements["dnsMode"][1].disabled = false;
	} else {
		dF.wan_pptp_use_dynamic_carrier_radio[index].checked = true;
		dF.pptpIpAddr.disabled = false;
		dF.pptpSubnetMask.disabled = false;
		dF.pptpDefGw.disabled = false;
		dynamicWanIP = 0;

		if(dF.pptpGetServMode[0].checked)
		{
			dF.elements["dnsMode"][0].disabled = true;
			dF.elements["dnsMode"][1].checked = true;
			manualDNSclicked();
		}
		else
		{
			dF.elements["dnsMode"][0].disabled = false;
			dF.elements["dnsMode"][1].disabled = false;
		}		
	}
}
function pptpGetServByIpClicked()
{
	disableTextField(document.tcpip.pptpServerDomainName);
	enableTextField(document.tcpip.pptpServerIpAddr);

	document.tcpip.elements["dnsMode"][0].disabled = false;	
	document.tcpip.elements["dnsMode"][1].disabled = false;
}
function pptpGetServByDomainNameClicked()
{
	disableTextField(document.tcpip.pptpServerIpAddr);
	enableTextField(document.tcpip.pptpServerDomainName);

	if(document.tcpip.wan_pptp_use_dynamic_carrier_radio[1].checked)
	{
		document.tcpip.elements["dnsMode"][0].disabled = true;	
		document.tcpip.elements["dnsMode"][1].checked = true;	
		manualDNSclicked();
	}
	else
	{
		document.tcpip.elements["dnsMode"][0].disabled = false;	
		document.tcpip.elements["dnsMode"][1].disabled = false;
	}
}

function l2tpGetServByIpClicked()
{
	disableTextField(document.tcpip.l2tpServerDomainName);
	enableTextField(document.tcpip.l2tpServerIpAddr);

	document.tcpip.elements["dnsMode"][0].disabled = false;	
	document.tcpip.elements["dnsMode"][1].disabled = false;
}
function l2tpGetServByDomainNameClicked()
{
	disableTextField(document.tcpip.l2tpServerIpAddr);
	enableTextField(document.tcpip.l2tpServerDomainName);

	if(document.tcpip.wan_l2tp_use_dynamic_carrier_radio[1].checked)
	{
		document.tcpip.elements["dnsMode"][0].disabled = true;	
		document.tcpip.elements["dnsMode"][1].checked = true;	
		manualDNSclicked();
	}
	else
	{
		document.tcpip.elements["dnsMode"][0].disabled = false;	
		document.tcpip.elements["dnsMode"][1].disabled = false;
	}	
}
function wan_l2tp_use_dynamic_carrier_selector(index, mode){
	var dF=document.tcpip;

	if(mode == "dynamicIP") {
		dF.wan_l2tp_use_dynamic_carrier_radio[index].checked = true;
		dF.l2tpIpAddr.disabled = true;
		dF.l2tpSubnetMask.disabled = true;
		dF.l2tpDefGw.disabled = true;
		dynamicWanIP = 1;

		dF.elements["dnsMode"][0].disabled = false;
		dF.elements["dnsMode"][1].disabled = false;	
	} else {
		dF.wan_l2tp_use_dynamic_carrier_radio[index].checked = true;
		dF.l2tpIpAddr.disabled = false;
		dF.l2tpSubnetMask.disabled = false;
		dF.l2tpDefGw.disabled = false;
		dynamicWanIP = 0;

		if(dF.l2tpGetServMode[0].checked)
		{
			dF.elements["dnsMode"][0].disabled = true;
			dF.elements["dnsMode"][1].checked = true;
			manualDNSclicked();
		}
		else
		{
			dF.elements["dnsMode"][0].disabled = false;
			dF.elements["dnsMode"][1].disabled = false;
		}
	}
}
//end
</SCRIPT>
</head>

<body onload="Load_wanSetting();">
<blockquote>
<h2><font color="#0000FF"><script>dw(tcpip_wan_header)</script></font></h2>
<form action=/formWanTcpipSetup.htm method=POST name="tcpip">

<table border=0 width="550" cellspacing=0 cellpadding=0>
  <tr><font size=2>
  <script>dw(tcpip_wan_explain)</script>  
  </tr>
  <tr><hr size=1 noshade align=top></tr>
  <tr>
</table>

  <table border="0" width=480>
    <tr>
       <td width="30%" height=40><font size=2><b><script>dw(tcpip_wan_access_type)</script></b></td>
       <td width="70%"><font size=2>
       <select size="1" name="wanType" onChange="wanTypeSelection(this)">
			<option value="fixedIp"><script>dw(tcpip_wan_type_static_ip)</script></option>
			<option value="autoIp"><script>dw(tcpip_wan_type_client)</script></option>
			<option value="ppp">PPPoE</option>
<% getIndex("pptp_comment_start");%>
			<option value="pptp">PPTP</option>
<% getIndex("pptp_comment_end");%>
<% getIndex("l2tp_comment_start");%>
			<option value="l2tp">L2TP</option>
<% getIndex("l2tp_comment_end");%>		
			<SCRIPT>
      		showNetSniperWanTypeInfo();
   		    </SCRIPT> 
	   </select></td>
    <tr>
  </table>

  
  <span id = "static_div" class = "off" >  
  <table border="0" width=480>
    <tr>
       <td width="30%"><font size=2><b><script>dw(tcpip_wan_ip)</script></b></td>
       <td width="70%"><font size=2>
        <input type="text" name="wan_ip" size="18" maxlength="15" value="<% getInfo("wan-ip-rom"); %>">
      </td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mask)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="wan_mask" size="18" maxlength="15" value="<% getInfo("wan-mask-rom"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_default_gateway)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="wan_gateway" size="18" maxlength="15" value="<% getInfo("wan-gateway-rom"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mtu_size)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="fixedIpMtuSize" size="10" maxlength="10" value="<% getIndex("fixedIpMtuSize"); %>">&nbsp;(1400-1500 <script>dw(tcpip_wan_max_mtu_size)</script>)</td>
    </tr>
  </table>  
  </span>


  <span id = "dhcpplus_div" class = "off" >  
  <table border="0" width=480>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_user)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="dhcpPlusUserName" size="18" maxlength="32" value="<% getInfo("dhcpPlusUserName"); %>"></td>
    </tr>  
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_password)</script></b></td>
      <td width="70%"><font size=2><input type="password" name="dhcpPlusPassword" size="18" maxlength="32" value="<% getInfo("dhcpPlusPassword"); %>"></td>
    </tr>
  </table>  
  </span>
  
  <span id = "dhcp_div" class = "off" >  
  <table border="0" width=480>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_host)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="hostName" size="18" maxlength="30" value="<% getInfo("hostName"); %>"></td>
    </tr>  
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mtu_size)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="dhcpMtuSize" size="10" maxlength="10" value="<% getIndex("dhcpMtuSize"); %>">&nbsp;(1400-1500 <script>dw(tcpip_wan_max_mtu_size)</script>)</td>
    </tr>
  </table>  
  </span>



  <span id = "pppoe_div" class = "off" >  
  <table border="0" width=480>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="tr069DhcpEnabled" value="ON"><script>dw(tcpip_wan_enable_tr069_dhcp)</script></b></td>
    </tr>
    
    <tr>
    <td width="100%" colspan="2"><font size=2></td>
    </tr>
    <tr>
    <td width="100%" colspan="2"><font size=2></td>
    </tr>
    
     <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_user)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pppUserName" size="18" maxlength="128" value="<% getInfo("pppUserName"); %>"></td>
    </tr>    
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_password)</script></b></td>
      <td width="70%"><font size=2><input type="password" name="pppPassword" size="18" maxlength="128" value="<% getInfo("pppPassword"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_server_ac)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pppServiceName" size="18" maxlength="40" value="<% getInfo("pppServiceName"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_conn_type)</script></b></td>
      <td width="70%"><font size=2>
      <select size="1" name="pppConnectType" onChange="pppoeTypeSelect(this)">
      	<option value="continuous"><script>dw(tcpip_wan_continuous)</script></option>
      	<option value="on_demand"><script>dw(tcpip_wan_on_demand)</script></option>
      	<option value="manual"><script>dw(tcpip_wan_manual)</script></option>
        </select>&nbsp;&nbsp;
	<input type="submit" value="Connect" name="pppConnect" onClick="return pppConnectClick(0)">&nbsp;&nbsp;
	<script>document.tcpip.pppConnect.value = tcpip_wan_conn;</script>
	<input type="submit" value="Disconnect" name="pppDisconnect" onClick="return pppConnectClick(1)">
<script type="text/javascript">
        if ( <% getIndex("pppConnectStatus"); %> )
                setPPPConnected();
</script>
	<script>document.tcpip.pppDisconnect.value = tcpip_wan_disconn;</script>
	</td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_idle_time)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pppIdleTime" size="10" maxlength="10" value="<% getIndex("wan-ppp-idle"); %>"><script>dw(tcpip_wan_conn_time )</script></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mtu_size)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pppMtuSize" size="10" maxlength="10" value="<% getIndex("pppMtuSize"); %>">&nbsp;(1360-1492 <script>dw(tcpip_wan_max_mtu_size)</script>)</td>
    </tr>        
  </table>
  </span>


  <span id = "pptp_div" class = "off" >  
  <table border="0" width=480>  
    <tr>
 	  <td width="100%" colspan="2"><font size=2>
        <b><input type="radio" value="dynamicIP" name="wan_pptp_use_dynamic_carrier_radio" onClick="wan_pptp_use_dynamic_carrier_selector(0, this.value);"><script>dw(tcpip_wan_dynamic_ip)</script></b>
      </td>
    </tr>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="radio" value="staticIP" name="wan_pptp_use_dynamic_carrier_radio" onClick="wan_pptp_use_dynamic_carrier_selector(1, this.value);"><script>dw(tcpip_wan_static_ip)</script></b>
      </td>
    </tr>    
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_ip)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pptpIpAddr" size="18" maxlength="30" value="<% getInfo("pptpIp"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mask)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pptpSubnetMask" size="18" maxlength="30" value="<% getInfo("pptpSubnet"); %>"></td>
    </tr>   
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_default_gateway)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pptpDefGw" size="18" maxlength="30" value="<% getInfo("pptpDefGw"); %>"></td>
    </tr>    
<script type="text/javascript">  
	if(<%getIndex("enableGetServIpByDomainName")%>)
	{
		document.write("\
			    <tr>\
			      	<td width=\"100%\" colspan=\"2\"><font size=2>\
					<b><input type=\"radio\" value=\"pptpGetServByDomainName\" name=\"pptpGetServMode\" onClick=\"pptpGetServByDomainNameClicked()\">");
		dw(tcpip_wan_attain_by_DN);
		document.write("</b>\
			      	</td>\
			    </tr>\
			    <tr>\
			    	<td width=\"100%\" colspan=\"2\"><font size=2>\
					<b><input type=\"radio\" value=\"pptpGetServByIp\" name=\"pptpGetServMode\" onClick=\"pptpGetServByIpClicked()\">");
		dw(tcpip_wan_attain_by_Ip);
		document.write("</b>\
			      	</td>\
			    </tr>\
			     <tr>\
			      <td width=\"30%\"><font size=2><b>");
		dw(tcpip_domain);
		document.write("</b></td>\
			      <td width=\"70%\"><font size=2><input type=\"text\" name=\"pptpServerDomainName\" size=\"18\" maxlength=\"30\" value=\"<% getInfo("pptpServerDomain"); %>\"></td>\
			    </tr>\
			 ");
	}
</script>    
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_server_ip)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pptpServerIpAddr" size="18" maxlength="30" value="<% getInfo("pptpServerIp"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_user)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pptpUserName" size="18" maxlength="128" value="<% getInfo("pptpUserName"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_password)</script></b></td>
      <td width="70%"><font size=2><input type="password" name="pptpPassword" size="18" maxlength="128" value="<% getInfo("pptpPassword"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_conn_type)</script></b></td>
      <td width="70%"><font size=2>
      <select size="1" name="pptpConnectType" onChange="pptpTypeSelect(this)">
      	<option value="continuous"><script>dw(tcpip_wan_continuous)</script></option>
      	<option value="on_demand"><script>dw(tcpip_wan_on_demand)</script></option>
      	<option value="manual"><script>dw(tcpip_wan_manual)</script></option>
        </select>&nbsp;&nbsp;
	<input type="submit" value="Connect" name="pptpConnect" onClick="return pptpConnectClick(0)">&nbsp;&nbsp;
	<script>document.tcpip.pptpConnect.value = tcpip_wan_conn;</script>
	<input type="submit" value="Disconnect" name="pptpDisconnect" onClick="return pptpConnectClick(1)">
<script type="text/javascript">
        if ( <% getIndex("pppConnectStatus"); %> )
                setPPPConnected();
</script>	
	<script>document.tcpip.pptpDisconnect.value = tcpip_wan_disconn;</script>
	</td>
    </tr>   
      <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_idle_time)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pptpIdleTime" size="10" maxlength="10" value="<% getIndex("wan-pptp-idle"); %>"><script>dw(tcpip_wan_conn_time )</script></td>
    </tr>  
     <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mtu_size)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="pptpMtuSize" size="10" maxlength="10" value="<% getIndex("pptpMtuSize"); %>">&nbsp;(1400-1460 <script>dw(tcpip_wan_max_mtu_size)</script>)</td>
    </tr>   
    
	<tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="pptpSecurity" value="ON">&nbsp;&nbsp;Request MPPE Encryption&nbsp;&nbsp;&nbsp;&nbsp;
        <input type="checkbox" name="pptpCompress" value="ON">&nbsp;&nbsp;Request MPPC Compression</b></td>       
    </tr>
    <tr></tr><tr></tr><tr></tr>
    </table>
    </span>

    
    <span id = "l2tp_div" class = "off" >  
    <table border="0" width=480>    
    <tr>
 	  <td width="100%" colspan="2"><font size=2>
        <b><input type="radio" value="dynamicIP" name="wan_l2tp_use_dynamic_carrier_radio" onClick="wan_l2tp_use_dynamic_carrier_selector(0, this.value);"><script>dw(tcpip_wan_dynamic_ip)</script></b>
      </td>
    </tr>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="radio" value="staticIP" name="wan_l2tp_use_dynamic_carrier_radio" onClick="wan_l2tp_use_dynamic_carrier_selector(1, this.value);"><script>dw(tcpip_wan_static_ip)</script></b>
      </td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_ip)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="l2tpIpAddr" size="18" maxlength="30" value="<% getInfo("l2tpIp"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mask)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="l2tpSubnetMask" size="18" maxlength="30" value="<% getInfo("l2tpSubnet"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_default_gateway)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="l2tpDefGw" size="18" maxlength="30" value="<% getInfo("l2tpDefGw"); %>"></td>
    </tr>
<script type="text/javascript">  
	if(<%getIndex("enableGetServIpByDomainName")%>)
	{
		document.write("\
			    <tr>\
			      	<td width=\"100%\" colspan=\"2\"><font size=2>\
					<b><input type=\"radio\" value=\"l2tpGetServByDomainName\" name=\"l2tpGetServMode\" onClick=\"l2tpGetServByDomainNameClicked()\">");
		dw(tcpip_wan_attain_by_DN);
		document.write("</b>\
			      	</td>\
			    </tr>\
			    <tr>\
			    	<td width=\"100%\" colspan=\"2\"><font size=2>\
					<b><input type=\"radio\" value=\"l2tpGetServByIp\" name=\"l2tpGetServMode\" onClick=\"l2tpGetServByIpClicked()\">");
		dw(tcpip_wan_attain_by_Ip);
		document.write("</b>\
			      	</td>\
			    </tr>\
			     <tr>\
			      <td width=\"30%\"><font size=2><b>");
		dw(tcpip_domain);
		document.write("</b></td>\
			      <td width=\"70%\"><font size=2><input type=\"text\" name=\"l2tpServerDomainName\" size=\"18\" maxlength=\"30\" value=\"<% getInfo("l2tpServerDomain"); %>\"></td>\
			    </tr>\
			 ");
	}
</script>
   
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_server_ip)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="l2tpServerIpAddr" size="18" maxlength="30" value="<% getInfo("l2tpServerIp"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_user)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="l2tpUserName" size="18" maxlength="128" value="<% getInfo("l2tpUserName"); %>"></td>
    </tr>
    <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_password)</script></b></td>
      <td width="70%"><font size=2><input type="password" name="l2tpPassword" size="18" maxlength="128" value="<% getInfo("l2tpPassword"); %>"></td>
    </tr>
     <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_conn_type)</script></b></td>
      <td width="70%"><font size=2>
      <select size="1" name="l2tpConnectType" onChange="l2tpTypeSelect(this)">
      	<option value="continuous"><script>dw(tcpip_wan_continuous)</script></option>
      	<option value="on_demand"><script>dw(tcpip_wan_on_demand)</script></option>
      	<option value="manual"><script>dw(tcpip_wan_manual)</script></option>
        </select>&nbsp;&nbsp;
	<input type="submit" value="Connect" name="l2tpConnect" onClick="return l2tpConnectClick(0)">&nbsp;&nbsp;
	 <script>document.tcpip.l2tpConnect.value = tcpip_wan_conn;</script>
	<input type="submit" value="Disconnect" name="l2tpDisconnect" onClick="return l2tpConnectClick(1)">
<script type="text/javascript">
        if ( <% getIndex("pppConnectStatus"); %> )
                setPPPConnected();
</script>	
	 <script>document.tcpip.l2tpDisconnect.value = tcpip_wan_disconn;</script>

	</td>
    </tr>   
      <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_idle_time)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="l2tpIdleTime" size="10" maxlength="10" value="<% getIndex("wan-l2tp-idle"); %>"><script>dw(tcpip_wan_conn_time )</script></td>
    </tr>  
     <tr>
      <td width="30%"><font size=2><b><script>dw(tcpip_wan_mtu_size)</script></b></td>
      <td width="70%"><font size=2><input type="text" name="l2tpMtuSize" size="10" maxlength="10" value="<% getIndex("l2tpMtuSize"); %>">&nbsp;(1400-1460 <script>dw(tcpip_wan_max_mtu_size)</script>)</td>
    </tr>  
    <tr></tr><tr></tr><tr></tr>
    </table>
    </span>


    
    <span id = "dnsMode_div" class = "off" >
    <table border="0" width=480>
    <tr>
      <td width="100%" colspan="2"><font size=2>
		<b><input type="radio" value="dnsAuto" name="dnsMode" onClick="autoDNSclicked()"><script>dw(tcpip_wan_auto_dns)</script></b>
      </td>
    </tr>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="radio" value="dnsManual" name="dnsMode" onClick="manualDNSclicked()"><script>dw(tcpip_wan_manually_dns)</script></b>
      </td>
    </tr>
    <tr>
    </table>
    </span>
    
    <span id = "dns_div" class = "off" >
    <table border="0" width=480>
    <tr>
       <td width="30%"><font size=2><b>&nbsp;&nbsp;&nbsp;DNS 1:</b></td>
       <td width="70%"><font size=2><input type="text" name="dns1" size="18" maxlength="15" value=<% getInfo("wan-dns1"); %>></td>
    </tr>
    <tr>
       <td width="30%"><font size=2><b>&nbsp;&nbsp;&nbsp;DNS 2:</b></td>
       <td width="70%"><font size=2><input type="text" name="dns2" size="18" maxlength="15" value=<% getInfo("wan-dns2"); %>></td>
    </tr>    
    </table>
    </span>


    
    <table border="0" width=480>
    <tr> 
       <td width="30%"><font size=2><b><script>dw(tcpip_wan_clone_mac)</script></b></td>
       <td width="70%"><font size=2><input type="text" name="wan_macAddr" size="18" maxlength="12" value=<% getInfo("wanMac"); %>></td>
    </tr>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="upnpEnabled" value="ON"><script>dw(tcpip_wan_enable_upnp)</script></b></td>
    </tr>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="igmpproxyEnabled" value="ON"><script>dw(tcpip_wan_enable_igmp_proxy )</script></b></td>
    </tr>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="pingWanAccess" value="ON"><script>dw(tcpip_wan_enable_ping)</script></b></td>
    </tr>        
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="webWanAccess" value="ON"><script>dw(tcpip_wan_enable_webserver)</script></b></td>
    </tr>        
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="WANPassThru1" value="ON"><script>dw(tcpip_wan_enable_ipsec)</script></b></td>
    </tr>
    <tr>
      <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="WANPassThru2" value="ON"><script>dw(tcpip_wan_enable_pptp)</script></b></td>
    </tr>
    <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="WANPassThru3" value="ON"><script>dw(tcpip_wan_enable_l2tp)</script></b></td>
    </tr>
    <td width="100%" colspan="2"><font size=2>
        <b><input type="checkbox" name="ipv6_passthru_enabled" value="ON"><script>dw(tcpip_wan_enable_ipv6)</script></b></td>
    </tr>
    <SCRIPT>
      showNetSniperInfo();
    </SCRIPT> 
   </table>

  <BR>
  <input type="hidden" value="/tcpipwan.htm" name="submit-url">
  <p><input type="submit" value="Apply Changes" name="save" onClick="return checkChanges_tcpipwan()">&nbsp;&nbsp;
  <script>document.tcpip.save.value = tcpip_apply;</script>
  <input type="reset" value="Reset" name="reset" onClick="resetClicked()">
  <script>document.tcpip.reset.value = tcpip_reset;</script>
</p>
</form>
</blockquote>
</body>
</html>
